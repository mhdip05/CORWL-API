pr:
  - main
  - develop

trigger:
  - main
  - develop

pool:
  vmImage: "windows-latest"

jobs:
  - job: BuildTestPublishMain
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))

    steps:
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: "$(Parameters.RestoreBuildProjects)"

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      projects: "$(Parameters.RestoreBuildProjects)"
      arguments: "--configuration $(BuildConfiguration)"

  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: test
      projects: "$(Parameters.TestProjects)"
      arguments: "--configuration $(BuildConfiguration)"

  - task: DotNetCoreCLI@2
    displayName: Publish
    inputs:
      command: publish
      publishWebProjects: True
      arguments: "--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)"
      zipAfterPublish: True

  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact"
    inputs:
      PathtoPublish: "$(build.artifactstagingdirectory)"
    condition: succeededOrFailed()

  - job: BuildTestPublishDevelop
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))

    steps:
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: "$(Parameters.RestoreBuildProjects)"

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      projects: "$(Parameters.RestoreBuildProjects)"
      arguments: "--configuration $(BuildConfiguration)"

  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: test
      projects: "$(Parameters.TestProjects)"
      arguments: "--configuration $(BuildConfiguration)"

  - task: DotNetCoreCLI@2
    displayName: Publish
    inputs:
      command: publish
      publishWebProjects: True
      arguments: "--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)"
      zipAfterPublish: True

  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact"
    inputs:
      PathtoPublish: "$(build.artifactstagingdirectory)"
    condition: succeededOrFailed()
