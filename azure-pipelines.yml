pr:
- main
- develop

trigger:
- main
- develop

pool:
  vmImage: 'windows-latest'

jobs:
- job: BuildTestPublishMain
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '6.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - script: dotnet restore --verbosity normal
      displayName: 'Restore NuGet packages'

    - script: dotnet build --configuration Release --no-restore
      displayName: 'Build'

    - script: dotnet test --configuration Release --no-build --verbosity normal
      displayName: 'Run Tests'

    - task: DotNetCoreCLI@2
      displayName: 'Publish'
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
      condition: succeededOrFailed()

- job: BuildTestPublishDevelop
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '6.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - script: dotnet restore --verbosity normal
      displayName: 'Restore NuGet packages'

    - script: dotnet build --configuration Release --no-restore
      displayName: 'Build'

    - script: dotnet test --configuration Release --no-build --verbosity normal
      displayName: 'Run Tests'

    - task: DotNetCoreCLI@2
      displayName: 'Publish'
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
      condition: succeededOrFailed()
